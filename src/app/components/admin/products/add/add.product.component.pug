div.row
  div.large-12.columns.text-center
    h2 {{ msg }}


div.row
  div.large-3.columns
    div.file-upload
      label.button(for="photo") Upload foto
      input#photo(style="visibility: hidden", type="file", (change)="fileChangeListener($event)")
    button.button(*ngIf="data.image", (click)="preview()") Voorbeeld

  div.large-9.columns
    <img-cropper [image]="data" [settings]="cropperSettings" (onCrop)="cropped($event)" #cropper [hidden]="!data.image"></img-cropper>

form([formGroup]="addProductForm",(ngSubmit)="submitForm(addProductForm.value)")
  div.row
    div.large-5.columns
      label([ngClass]="{ 'error': !addProductForm.controls['name'].valid && addProductForm.controls['name'].touched }") Product naam
        input(type="text", [formControl]="addProductForm.controls['name']", [ngClass]="{ 'error': !addProductForm.controls['name'].valid && addProductForm.controls['name'].touched }")
      small.error(*ngIf="!addProductForm.controls['name'].valid && addProductForm.controls['name'].touched") Product naam is verplicht

    div.large-4.columns
      label([ngClass]="{ 'error': !addProductForm.controls['category'].valid && addProductForm.controls['category'].touched }") Categorie
        select([formControl]="addProductForm.controls['category']", [ngClass]="{ 'error': !addProductForm.controls['category'].valid && addProductForm.controls['category'].touched }")
          option(*ngFor="let category of categories; let i = index; trackBy: trackByFn", [value]="category.category") {{category.category}}
      small.error(*ngIf="!addProductForm.controls['category'].valid && addProductForm.controls['category'].touched") Categorie is verplicht

    div.large-2.columns
      label(for="price", [ngClass]="{ 'error': !addProductForm.controls['price'].valid && addProductForm.controls['price'].touched }") Prijs
      div.input-group
        span.input-group-label &euro;
        input.input-group-field(type="number", [formControl]="addProductForm.controls['price']", [ngClass]="{ 'error': !addProductForm.controls['price'].valid && addProductForm.controls['price'].touched }")
      small.error(*ngIf="!addProductForm.controls['price'].valid && addProductForm.controls['price'].touched", style="margin-top: -16px") Prijs is verplicht

    div.large-1.columns
      label([ngClass]="{ 'error': !addProductForm.controls['amount'].valid && addProductForm.controls['amount'].touched }") Aantal
        input(type="number", [formControl]="addProductForm.controls['amount']", [ngClass]="{ 'error': !addProductForm.controls['amount'].valid && addProductForm.controls['amount'].touched }")
      small.error(*ngIf="!addProductForm.controls['amount'].valid && addProductForm.controls['amount'].touched") Aantal is verplicht

  div.row
    div.large-12.columns
      label([ngClass]="{ 'error': !addProductForm.controls['description'].valid && addProductForm.controls['description'].touched }") Beschrijving
        textarea(id="description", [formControl]="addProductForm.controls['description']", [ngClass]="{ 'error': !addProductForm.controls['description'].valid && addProductForm.controls['description'].touched }")
      small.error(*ngIf="!addProductForm.controls['description'].valid && addProductForm.controls['description'].touched") Beschrijving is verplicht

  input(type="text", style="visibility: hidden", [formControl]="addProductForm.controls['photo']")
  div.row
    div.large-2.columns.end
      button.button(type="submit", [disabled]="!addProductForm.valid || disabled") Opslaan
